//
//  SearchCharatersViewController.swift
//  RickMorty_CleanSwift
//
//  Created by Nithi Kulasiriswatdi on 7/8/2563 BE.
//  Copyright (c) 2563 Nithi Kulasiriswatdi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchCharatersDisplayLogic: class
{
  func displayFetchSearchResults(viewModel: SearchCharaters.FetchSearch.ViewModel)
}

class SearchCharatersViewController: UIViewController, SearchCharatersDisplayLogic
{
  var interactor: SearchCharatersBusinessLogic?
  var router: (NSObjectProtocol & SearchCharatersRoutingLogic & SearchCharatersDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = SearchCharatersInteractor()
    let presenter = SearchCharatersPresenter()
    let router = SearchCharatersRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()

  }
  
    @IBOutlet var tableView: UITableView!
        
      // MARK: - Fetch orders
        
    var displaySearchResults: [SearchCharaters.FetchSearch.ViewModel.DisplaySearchResult] = []
    //    var displayedOrders: [ListCharactersModels.FetchOrders.ViewModel.DisplayedOrder] = []
 
        func displayFetchSearchResults(viewModel: SearchCharaters.FetchSearch.ViewModel) {
            displaySearchResults = viewModel.displaySearchResult
            self.tableView.reloadData()
            
     }
    
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  

}
extension  SearchCharatersViewController:UITableViewDataSource,UITableViewDelegate{
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return displaySearchResults.count
    }
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.router?.routeToListCharacter()
    }
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let displaySearchResult = displaySearchResults[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell")
        cell?.textLabel?.text = displaySearchResult.name
        return cell!
    }
}
